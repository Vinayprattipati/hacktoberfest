#include<stdio.h>
#include<stdlib.h>
int q_2[50],front_2=-1,rear_2=-1,a2[50][50],vis_2[50];

void add(int item){

    if(rear_2==49)
    printf("QUEUE FULL");
    else{
            
        if(rear_2==-1){
        q_2[++rear_2]=item;
        front_2++;
        }
        else
        q_2[++rear_2]=item;
    }
}

int delete(){

    int k;
    if((front_2>rear_2)||(front_2==-1))
    return(0);
    else{
        k=q_2[front_2++];
        return(k);
    }
}

void bfs2(int s,int n){

    int p,i;
    add(s);
    vis_2[s]=1;
    p=delete();

    if(p!=0)
    printf("  %d",p);
    
    while(p!=0){

        for(i=1;i<=n;i++)
        if((a2[p][i]!=0)&&(vis_2[i]==0)){
            add(i);
            vis_2[i]=1;
        }
        p=delete();
        if(p!=0)
            printf("  %d ",p);
    }
    for(i=1;i<=n;i++)
    if(vis_2[i]==0)
        bfs2(i,n);
}

void main(){

    int v,i,s,e,j,k;

    printf("Enter no of vertices: \n");
    scanf("%d",&v);
    printf("Enter no of edges: \n");
    scanf("%d" ,&e);

    printf("Enter the vertices which contain a edge: \n");
    for(int i=0;i<e;i++) {
        scanf("%d %d",&j,&k);
        a2[j][k] = 1;
        a2[k][j] = 1;
    }

    printf("THE ADJACENCY MATRIX IS\n");
    for(i=1;i<=v;i++){

        for(j=1;j<=v;j++)
            printf(" %d", a2[i][j]);
        
        printf("\n");
    }

    for(i=1;i<=v;i++)
    vis_2[i]=0;
        
    printf("Enter the source vertex to start BFS: \n");
    scanf("%d",&s);

    bfs2(s,v);
    printf("\n");
}
